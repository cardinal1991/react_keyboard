{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleKeyUp","event","pressedKey","setState","document","addEventListener","this","removeEventListener","content","className","React","Component","ReactDOM","render","getElementById"],"mappings":"sMAOaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,MAFT,EAaEC,YAAc,SAACC,GACb,IAAMC,EAAaD,EAAMF,IAEzB,EAAKI,SAAS,CACZJ,IAAKG,KAjBX,uDAKE,WACEE,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAqBE,WACE,IACIQ,EADIT,EAAQO,KAAKR,MAAbC,IAiBR,OAPES,EAPGT,EAQD,sEAC+BA,EAD/B,OANA,+DAaF,qBAAKU,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACID,UA1CZ,GAAyBE,IAAMC,WCF/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,U","file":"static/js/main.a5f26908.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\ntype State = {\n  key: string | null;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    key: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  handleKeyUp = (event: KeyboardEvent) => {\n    const pressedKey = event.key;\n\n    this.setState({\n      key: pressedKey,\n    });\n  };\n\n  render() {\n    const { key } = this.state;\n    let content;\n\n    if (!key) {\n      content = (\n        <>\n          Nothing was pressed yet\n        </>\n      );\n    } else {\n      content = (\n        <>\n          {`The last pressed key is [${key}]`}\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { content }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}